_id: spc_00332169420c423facfd46bf6f6ff736
type: ApiSpec
parentId: wrk_0a8dd59c83b94c72831fd19c9ed7e91b
modified: 1666698769106
created: 1666015439244
fileName: WashTrak
contents: |+
  openapi: 3.0.0
  info:
    description: "This is the description for the Washtrak API."
    version: 0.1.0
    title: WashTrak API
    license:
      name: MIT
      url: https://opensource.org/licenses/MIT
  tags:
    - name: auth
      description: Everything about the authentication
    - name: machines
      description: Everything about the machines
    - name: users
      description: Everything about the users
  paths:
    /auth/login:
      post:
        security:
          - basicAuth: []
        tags:
          - auth
        summary: Authentication to obtain JWT token
        description: ""
        operationId: login
        responses:
            '200':
              description: a JSON web token (JWT) required to login.
              content:
                application/jwt:
                  schema:
                    type: string
            "401":
              description: User not authenticated
    /machines/:
      get:
        security:
          - bearerAuth: []
        tags:
          - machines
        summary: Gets all machines
        description: ''
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/Machine"
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
      put:
        security:
          - bearerAuth: []
        tags:
          - machines
        summary: Adds a new machine
        description: ''
        requestBody:
          $ref: "#/components/requestBodies/MachineCreate"
        responses:
          "200":
            description: Successful operation
          "401":
            description: User not authenticated
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
    "/machines/id/{id}":
      get:
        security:
          - bearerAuth: []
        tags:
          - machines
        summary: Find a machine by ID
        description: Returns a single machine
        parameters:
          - name: id
            in: path
            description: ID of machine to return
            required: true
            schema:
              type: integer
              format: int64
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Machine"
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
      delete:
        security:
          - bearerAuth: []
        tags:
          - machines
        summary: Deletes a machine by ID
        description: ""
        parameters:
          - name: id
            in: path
            description: Pet id to delete
            required: true
            schema:
              type: integer
              format: int64
        responses:
          "200":
            description: successful operation
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
      post:
        security:
          - bearerAuth: []
        tags:
          - machines
        summary: Updates a machine by ID
        description: ""
        parameters:
          - name: id
            in: path
            description: ID of machine to update
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/MachineCreate"
        responses:
          "200":
            description: successful operation
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
    "/machines/name/{name}":
      get:
        security:
          - bearerAuth: []
        tags:
          - machines
        summary: Find a machine by name
        description: Returns a single pet
        parameters:
          - name: name
            in: path
            description: Name of machine to return
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/Machine"
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
      delete:
        security:
          - bearerAuth: []
        tags:
          - machines
        summary: Deletes a machine by name
        description: ""
        parameters:
          - name: name
            in: path
            description: Name of machine to delete
            required: true
            schema:
              type: string
        responses:
          "200":
            description: successful operation
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
      post:
        security:
          - bearerAuth: []
        tags:
          - machines
        summary: Updates a machine by name
        description: ""
        parameters:
          - name: name
            in: path
            description: Name of machine to update
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/MachineCreate"
        responses:
          "200":
            description: successful operation
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
    /users/:
      get:
        security:
          - bearerAuth: []
        tags:
          - users
        summary: Gets all users
        description: ''
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "#/components/schemas/User"
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
      put:
        security:
          - bearerAuth: []
        tags:
          - users
        summary: Adds a new user
        description: ''
        requestBody:
          $ref: "#/components/requestBodies/UserCreate"
        responses:
          "200":
            description: Successful operation
          "401":
            description: User not authenticated
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
             
    "/users/id/{id}":
      get:
        security:
          - bearerAuth: []
        tags:
          - users
        summary: Find a user by ID
        description: Returns a single user
        parameters:
          - name: id
            in: path
            description: ID of user to return
            required: true
            schema:
              type: integer
              format: int64
        responses:
          "200":
            description: successful operation
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/User"
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
      delete:
        security:
          - bearerAuth: []
        tags:
          - users
        summary: Deletes a user by ID
        description: ""
        parameters:
          - name: id
            in: path
            description: User id to delete
            required: true
            schema:
              type: integer
              format: int64
        responses:
          "200":
            description: successful operation
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
      post:
        security:
          - bearerAuth: []
        tags:
          - users
        summary: Updates a user by ID
        description: ""
        parameters:
          - name: id
            in: path
            description: ID of machine to user
            required: true
            schema:
              type: string
        requestBody:
          $ref: "#/components/requestBodies/UserCreate"
        responses:
          "200":
            description: successful operation
          "401":
            description: User not authenticated
          "404":
            description: Machine not found
          "403":
            description: User has not the correct rights
          "409":
             description: The ressource-request returned an error
  externalDocs:
    description: Find out more about Swagger
    url: http://swagger.io
  components:
    securitySchemes:
      basicAuth:
        type: http
        scheme: basic
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT
    requestBodies:
      User:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/User"
        description: User Object that needs to be added
        required: true
      MachineCreate:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MachineCreate"
        description: Machine Object that needs to be added
        required: true
      UserCreate:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/UserCreate"
        description: User Object that needs to be added
        required: true
    schemas:
      Machine:
        type: object
        required:
          - name
          - status
        properties:
          id:
            type: integer
            format: int64
          name:
            type: string
            example: wash1
          status:
            type: string
            description: status of the machine
            enum:
              - running
              - ready
              - spinning
      MachineCreate:
        type: object
        required:
          - name
          - status
        properties:
          name:
            type: string
            example: wash1
          status:
            type: string
            description: status of the machine
            enum:
              - running
              - ready
              - spinning
      MachineUpdate:
        type: object
        properties:
          name:
            type: string
            example: wash1
          status:
            type: string
            description: status of the machine
            enum:
              - running
              - ready
              - spinning
      User:
        type: object
        required:
          - id
          - name
          - password
          - type
        properties:
          id:
            type: number
            example: 1
          name:
            type: string
            example: user
          password:
            type: string
            example: passwordHash
          type:
            type: string
            example: admin
      UserCreate:
        type: object
        required:
          - name
          - password
          - type
        properties:
          name:
            type: string
            example: user
          password:
            type: string
            example: password
          type:
            type: string
            example: admin
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
            
contentType: yaml
